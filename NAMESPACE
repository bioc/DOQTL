useDynLib(DOQTL, .registration = TRUE, .fixes = "C_")

import( annotate, 
        annotationTools,
	     biomaRt, 
	     Biobase,
        BiocGenerics,
        BSgenome.Mmusculus.UCSC.mm10,
        corpcor,
        doParallel,
        foreach,
	     ggbio,
	     GenomicRanges,
	     hwriter,
	     IRanges,
        iterators,
	     MUGAExampleData,
	     org.Hs.eg.db,
	     org.Mm.eg.db,
	     QTLRel,
        regress,
        rhdf5,
	     Rsamtools,
        RUnit,
        VariantAnnotation,
	     XML )

importFrom(mclust, Mclust, mclustBIC, priorControl)

export("add.missing.F1s",
       "add.slash",
	   "addLog",
	   "addLogVector",
	   "assoc.map",
	   "assoc.map.perms",
	   "assoc.plot",
	   "batch.normalize",
	   "bayesint",
       "create.Rdata.files", 
       "calc.genoprob", 
       "calc.genoprob2", 
	   "categorize.variants",
	   "cc.trans.probs",
	   "chr.skeletons",
	   "cluster.strains",
	   "coefplot",
	   "colSumsLog",
          "condense.model.probs",
          "condense.sanger.snps",
	   "convert.allele.calls",
	   "convert.genotypes",
	   "convert.genes.to.GRanges",
	   "convert.pos.to.GRanges",
	   "convert.variants.to.GRanges",
	   "convert.variants.to.numeric",
	   "create.genotype.states",
	   "create.html.page",
	   "create.Rdata.files",
	   "do2sanger",
	   "do.trans.probs",
	   "estimate.cluster.params",
       "extract.raw.data",
	   "fast.qtlrel",
	   "fill.in.snps",
       "filter.geno.probs",
       "filter.samples",
	   "find.overlapping.genes",
	   "founder.F1.intensity.plot",
	   "gene.plot",
	   "get.chr.lengths",
	   "get.diplotype2haplotype.matrix",
	   "get.do.states",
	   "get.machine.precision",
	   "get.max.geno",
	   "get.mgi.features",
	   "get.pattern.variants",
	   "get.snp.patterns",
	   "get.strains",
	   "get.variants",
	   "get.vcf.strains",
       "genotype.by.sample.barplot",
       "genotype.by.snp.barplot",
	   "html.report",
      "interpolate.markers",
	   "intensity.mean.covar.plot",
       "kinship.probs",
          "matrixeqtl.snps",
	   "normalize.batches",
       "permutations.qtl.LRS",
	   "prsmth.plot",
	   "pxg.plot",
       "qtl.LRS",
	   "qtl.qtlrel",
       "qtl.heatmap", 
       "qtl.simulate",
	   "quantilenorm",
       "rankZ",
	   "read.vcf",
	   "read.vcf.colnames",
       "scanone",
       "scanone.assoc",
	   "scanone.eqtl",
       "scanone.perm",
	   "sdp.plot",
       "sex.predict",
	   "snp.plot",
       "summarize.genotype.transitions",
       "summarize.by.samples",
       "summarize.by.snps",
	   "variant.plot",
       "write.founder.genomes", 
	   "write.genoprob.plots")

S3method(coef, doqtl)
S3method(plot, doqtl)
S3method(plot, genoprobs)
S3method(plot, scanone.assoc)

